name: Node CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 14
      # - name: Cache node modules
      #   uses: c-hive/gha-npm-cache@v1
      - name: Install dependencies
        run: npm ci
      - name: Run lint command
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # node: [14, 16, 18, 20]
        node: [14]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      # The first installation step ensures that all of our production
      # dependencies work on the given Node.js version, this helps us find
      # dependencies that don't match our engines field:
      - run: npm install --production --engine-strict --ignore-scripts --no-package-lock
      # Clean up the production install, before installing dev/production:
      - run: rm -rf node_modules
      - run: npm ci
      - run: npm test

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 14
      # - name: Cache node modules
      #   uses: c-hive/gha-npm-cache@v1
      - name: Install dependencies
        run: npm ci
      - name: Run build command
        run: npm run build
